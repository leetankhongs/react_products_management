{"version":3,"sources":["components/menu/menu.js","pages/HomePage/HomePage.js","components/productList/productList.js","components/productItem/productItem.js","constants/Config.js","utils/apiCaller.js","actions/index.js","constants/actionTypes.js","container/productListContainer/productListContainer.js","pages/ProductListPage/ProductListPage.js","pages/NotFoundPage/NotFoundPage.js","components/addProductForm/addProductForm.js","container/addProductFormContainer/addProductFormContainer.js","pages/ProductActionPage/ProductActionPage.js","routes.js","App.js","serviceWorker.js","reducers/products.js","reducers/itemEditing.js","reducers/index.js","index.js"],"names":["menu","label","to","activeOnlyWhenExect","Menu","showMenu","result","length","map","item","index","key","className","this","Component","MenuLink","path","exact","children","active","match","HomePage","ProductList","props","ProductItem","onDelete","confirm","product","id","getProduct","editProduct","name","price","status","type","onClick","API_URL","callApi","endpoint","method","body","axios","url","Config","data","catch","err","console","log","actFetchProducts","products","actDeleteProduct","actAddProduct","actEditProduct","actGetProductRequest","dispatch","APICaller","then","res","actGetProduct","ProductListContainer","deleteProduct","showProductItemList","fetchAllProduct","connect","state","actions","ProductListPage","NotFoundPage","AddProductForm","onChangeValue","event","target","value","checked","setState","onSubmit","preventDefault","txtName","txtPrice","nextProps","onChange","itemEditing","AddProductFormContainer","history","addProduct","goBack","location","URLSearchParams","search","get","ProductActionPage","routes","main","App","showContentMenus","route","component","Boolean","window","hostname","initialState","action","_","findIndex","splice","push","productEditing","myReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a794c9ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Route } from 'react-router-dom'\r\nconst menu = [\r\n    {\r\n        label: 'Trang chủ',\r\n        to: '/react_products_management/',\r\n        activeOnlyWhenExect: true\r\n    },\r\n    {\r\n        label: 'Danh sách sản phẩm',\r\n        to: '/react_products_management/products',\r\n        activeOnlyWhenExect: false\r\n    },\r\n]\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"navbar navbar-default\">\r\n                    <p className=\"navbar-brand\" >CALL API</p>\r\n                    <ul className=\"nav navbar-nav\">\r\n                        {this.showMenu(menu)}\r\n                    </ul>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    showMenu = (menu) =>{\r\n        var result = null;\r\n\r\n        if(menu.length > 0){\r\n            result = menu.map((item, index) =>{\r\n                return <MenuLink key = {index} label = {item.label} to = {item.to} activeOnlyWhenExect = {item.activeOnlyWhenExect}/>\r\n            })\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nconst MenuLink = ({ label, to, activeOnlyWhenExect = false }) => {\r\n    return (\r\n        <Route path={to} exact={activeOnlyWhenExect} children={({ match }) => {\r\n            var active = match ? 'active' : '';\r\n            return (\r\n                <li className={active}>\r\n                    <Link to={to}>\r\n                        {label}\r\n                    </Link>\r\n                </li>\r\n            )\r\n        }} />\r\n    )\r\n}\r\n\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h2>Trang chủ</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport './productList.css';\r\n\r\nclass ProductList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-primary mt-15\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Danh sách sản phẩm</h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                  \r\n                  <table className=\"table table-condensed table-hover\">\r\n                      <thead>\r\n                          <tr>\r\n                              <th>STT</th>\r\n                              <th>Mã</th>\r\n                              <th>Tên</th>\r\n                              <th>Giá</th>\r\n                              <th>Trạng thái</th>\r\n                              <th>Hành động</th>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {this.props.children}\r\n                      </tbody>\r\n                  </table>\r\n                  \r\n            </div>\r\n      </div>\r\n      \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ProductItem extends Component {\r\n    \r\n    onDelete = () =>{\r\n        if(confirm(\"Bạn có muốn xóa sản phẩm này không?\")) //eslint-disable-line\r\n            this.props.onDelete(this.props.product.id)\r\n    }\r\n    \r\n    getProduct = (id)=>{\r\n        this.props.editProduct(this.props.product.id)\r\n    }\r\n    render() {\r\n        var {product, index} = this.props\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{product.id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>\r\n                    {product.status ? <span className=\"label label-success\">Còn hàng</span> : <span className=\"label label-warning\">Hết hàng</span>}\r\n\r\n                </td>\r\n                <td>\r\n\r\n                    <Link to = {'products/edit?id=' + product.id} className=\"btn btn-success\" >Chỉnh sửa</Link>\r\n                                  &nbsp; &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDelete}>Xóa</button>\r\n\r\n                </td>\r\n            </tr>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductItem;\r\n","export const API_URL = 'https://5f5b5697044570001674cc64.mockapi.io/api'","import axios from 'axios';\r\nimport * as Config from './../constants/Config'\r\n\r\nconst callApi = (endpoint, method = 'GET', body) =>{\r\n    return axios({\r\n        method: method,\r\n        url: Config.API_URL + '/' + endpoint,\r\n        data: body\r\n    }).catch(err =>{\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nexport default callApi;","import * as types from './../constants/actionTypes';\r\nimport APICaller from './../utils/apiCaller';\r\n\r\nexport const actFetchProductsRequest = () => {\r\n    return dispatch => {\r\n        return APICaller('products', 'GET', null).then(res => {\r\n            dispatch(actFetchProducts(res.data));\r\n        })\r\n    }\r\n}\r\n\r\nconst actFetchProducts = (products) => {\r\n    return {\r\n        type: types.FETCH_PRODUCTS,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actDeleteProductRequest = (id) => {\r\n    return dispatch => {\r\n        return APICaller('products/' + id, 'DELETE', null).then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(actDeleteProduct(id));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst actDeleteProduct = (id) => {\r\n    return {\r\n        type: types.DELETE_PRODUCT,\r\n        id\r\n    }\r\n}\r\n\r\nexport const actAddProductRequest = (product) => {\r\n    return dispatch => {\r\n        return APICaller('products', 'POST', {\r\n            name: product.name,\r\n            price: product.price,\r\n            status: product.status\r\n        }).then(res => {\r\n            dispatch(actAddProduct(res.data));\r\n        })\r\n    }\r\n}\r\n\r\nconst actAddProduct = (product) => {\r\n    return {\r\n        type: types.ADD_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actEditProductRequest = (product) => {\r\n    return dispatch => {\r\n        return APICaller('products/' + product.id, 'PUT', {\r\n            name: product.name,\r\n            price: product.price,\r\n            status: product.status\r\n        }).then(res => {\r\n            dispatch(actEditProduct(product));\r\n        })\r\n    }\r\n}\r\n\r\nconst actEditProduct = (product) => {\r\n    return {\r\n        type: types.EDIT_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actGetProductRequest = (id) => {\r\n    return dispatch => {\r\n        return APICaller('products/' + id, 'GET', null).then(res => {\r\n            dispatch(actGetProduct(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nconst actGetProduct = (product) => {\r\n    return {\r\n        type: types.GET_PRODUCT_EDITING,\r\n        product\r\n    }\r\n}","export const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\r\nexport const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const GET_PRODUCT_EDITING = 'GET_PRODUCT_EDITING';","import React, { Component } from 'react';\r\nimport ProductList from './../../components/productList/productList'\r\nimport ProductItem from './../../components/productItem/productItem'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from './../../actions/index'\r\n\r\n\r\nclass ProductListContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchAllProduct();\r\n\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        this.props.deleteProduct(id);\r\n    }\r\n    \r\n    render() {\r\n        var { products } = this.props;\r\n        return (\r\n            <ProductList>\r\n                {this.showProductItemList(products)}\r\n            </ProductList>\r\n        );\r\n    }\r\n\r\n    showProductItemList = (products) => {\r\n        var result = null;\r\n\r\n        if (products.length > 0) {\r\n            result = products.map((product, index) => {\r\n                return <ProductItem key={index} product={product} index={index} onDelete={this.onDelete} />\r\n            })\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllProduct: () => {\r\n            dispatch(actions.actFetchProductsRequest())\r\n        },\r\n        deleteProduct: (id) => {\r\n            dispatch(actions.actDeleteProductRequest(id));\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListContainer);\r\n","import React, { Component } from 'react';\r\nimport ProductListContainer from './../../container/productListContainer/productListContainer'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ProductListPage extends Component {\r\n \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n\r\n                <Link to = '/react_products_management/products/add' className=\"btn btn-info\">Thêm sản phẩm</Link>\r\n\r\n                <ProductListContainer />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n  \r\n}\r\n\r\n\r\n\r\nexport default ProductListPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFoundPage extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h2>Không tìm thấy trang</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from './../../actions/index'\r\nclass AddProductForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            txtName: '',\r\n            txtPrice: 0,\r\n            status: false\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onChangeValue = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit({\r\n            id: this.state.id,\r\n            name: this.state.txtName,\r\n            price: this.state.txtPrice,\r\n            status: this.state.status\r\n        })\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        var {product} = nextProps;\r\n        if(product){\r\n            this.setState({\r\n                id: product.id,\r\n                txtName: product.name,\r\n                txtPrice: product.price,\r\n                status: product.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        var { txtName, txtPrice, status } = this.state;\r\n\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <legend>Thêm sản phẩm</legend>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label >Tên sản phẩm</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='txtName'\r\n                                value={txtName}\r\n                                onChange={this.onChangeValue} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label >Giá</label>\r\n                            <input type=\"number\" className=\"form-control\"\r\n                                name='txtPrice'\r\n                                value={txtPrice}\r\n                                onChange={this.onChangeValue} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label >\r\n                                <input type=\"checkbox\"\r\n                                    name='status'\r\n                                    checked={status}\r\n                                    onChange={this.onChangeValue} /> Còn hàng\r\n                            </label>\r\n\r\n                        </div>\r\n                        {this.state.id !== '' ? <button className=\"btn btn-primary\">Chỉnh sửa</button> : <button className=\"btn btn-primary\">Thêm</button>}\r\n\r\n                        &nbsp;&nbsp;\r\n                        <Link to='/react_products_management/products' className=\"btn btn-danger\">Hủy bỏ</Link>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemEditing: state.itemEditing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getProduct: id => {\r\n            dispatch(actions.actGetProductRequest(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProductForm);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport AddProductForm from '../../components/addProductForm/addProductForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from './../../actions/index'\r\n\r\nclass AddProductFormContainer extends Component {\r\n    onSubmit = (product) => {\r\n        var { history } = this.props;\r\n\r\n        if (product.id !== '') {\r\n            this.props.editProduct(product);\r\n        }\r\n        else {\r\n            this.props.addProduct(product);\r\n\r\n        }\r\n\r\n        history.goBack();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location) {\r\n            var id = new URLSearchParams(this.props.location.search).get('id');\r\n            this.props.getProduct(id);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var { itemEditing } = this.props;\r\n\r\n        if (itemEditing) return <AddProductForm onSubmit={this.onSubmit} location={this.props.location} product={itemEditing} />\r\n        else\r\n            return (\r\n                <AddProductForm onSubmit={this.onSubmit} location={this.props.location} />\r\n            );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        itemEditing: state.itemEditing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        addProduct: product => {\r\n            dispatch(actions.actAddProductRequest(product));\r\n        },\r\n        editProduct: product => {\r\n            dispatch(actions.actEditProductRequest(product));\r\n        },\r\n        getProduct: id => {\r\n            dispatch(actions.actGetProductRequest(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProductFormContainer);\r\n\r\n","import React, { Component } from 'react';\r\nimport AddProductFormContainer from './../../container/addProductFormContainer/addProductFormContainer'\r\n\r\nclass ProductActionPage extends Component {\r\n    render() {\r\n        return (\r\n            <AddProductFormContainer history = {this.props.history} location = {this.props.location}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductActionPage;\r\n","import React from 'react';\r\nimport HomePage from './pages/HomePage/HomePage'\r\nimport ProductListPage from './pages/ProductListPage/ProductListPage'\r\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage'\r\nimport ProductActionPage from './pages/ProductActionPage/ProductActionPage'\r\nconst routes = [\r\n    {\r\n        path: '/react_products_management/',\r\n        exact: true,\r\n        main: ()=> <HomePage/>\r\n    },\r\n    {\r\n        path: '/react_products_management/products',\r\n        exact: true,\r\n        main: ()=> <ProductListPage/>\r\n    },\r\n    {\r\n        path: '/react_products_management/products/add',\r\n        exact: false,\r\n        main: ({history})=> <ProductActionPage history = {history}/>\r\n    },\r\n    {\r\n        path: '/react_products_management/products/edit',\r\n        exact: false,\r\n        main: ({location,history})=> <ProductActionPage history = {history} location = {location}/>\r\n    },\r\n    {\r\n        path: '',\r\n        exact: false,\r\n        main: ()=> <NotFoundPage/>\r\n    }\r\n]\r\n\r\nexport default routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './components/menu/menu'\nimport routes from './routes';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div >\n                    <Menu />\n\n                    <div className=\"container\">\n\n                        <div className=\"row\">\n                            <Switch>\n                                {this.showContentMenus(routes)}\n                            </Switch>\n                        </div>\n\n                    </div>\n\n                </div>\n            </Router>\n\n        );\n    }\n\n    showContentMenus = (routes) => {\n        var result = null;\n\n        if (routes.length > 0) {\n            result = routes.map((route, index) => {\n                return <Route key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.main} />\n\n            })\n        }\n\n        return result\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from './../constants/actionTypes';\r\nimport _ from 'lodash';\r\nvar initialState = [];\r\n\r\n\r\n\r\nconst products = (state = initialState, action) => {\r\n    var index = -1;\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCTS:\r\n            state = action.products;\r\n            return [...state];\r\n        case types.DELETE_PRODUCT:\r\n            index = _.findIndex(state, (product) => product.id === action.id)\r\n\r\n            if (index !== -1) {\r\n                state.splice(index, 1);\r\n            }\r\n\r\n            return [...state];\r\n        case types.ADD_PRODUCT:\r\n            state.push(action.product);\r\n            return [...state]\r\n\r\n        case types.EDIT_PRODUCT:\r\n            index = _.findIndex(state, (product) => product.id === action.product.id)\r\n            console.log(index)\r\n\r\n            if (index !== -1)\r\n            {\r\n                state[index] = action.product;\r\n            }\r\n                \r\n\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default products;","import * as types from './../constants/actionTypes';\r\n\r\nvar initialState = {};\r\nconst productEditing = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_PRODUCT_EDITING:\r\n            return action.product;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productEditing;","import {combineReducers} from 'redux';\r\nimport products from './products'\r\nimport itemEditing from './itemEditing'\r\nconst myReducer = combineReducers({\r\n    products,\r\n    itemEditing\r\n})\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose  } from 'redux'\nimport myReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    myReducer,\n    composeEnhancer(applyMiddleware(thunk)),\n    \n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}